{"componentChunkName":"component---src-pages-components-feedback-dialog-mdx","path":"/components/FeedbackDialog/","result":{"pageContext":{"frontmatter":{"title":"FeedbackDialog","description":"Allow visitors to your website to provide feedback through a dialog"},"relativePagePath":"/components/FeedbackDialog.mdx","titleType":"page","MdxNode":{"id":"4ad6e882-0895-5993-857a-53ac5c7f6c25","children":[],"parent":"c8d178ca-f5c4-547b-9833-0b4da78d201e","internal":{"content":"---\ntitle: FeedbackDialog\ndescription: Allow visitors to your website to provide feedback through a dialog\n---\n\n<PageDescription>\n\nThe `<FeedbackDialog>` component is a modeless dialog that allows your users to provide low-friction, anonymous feedback for a specific page.\n\n</PageDescription>\n\n## Activating the dialog\n\nThe Feedback button only becomes visisble once you've supplied an `onSubmit` handler. To do that, we'll need to shadow the `FeedbackDialog` component.\n\n1. Create a new javascript file under `src/gatsby-theme-carbon/components/FeedbackDialog/FeedbackDialog.js`. Matching the filepath exactly is important here.\n\n2. Copy the following snippet into your new file\n\n```jsx\n  import React from 'react';\n  import ThemeFeedbackDialog from 'gatsby-theme-carbon/src/components/FeedbackDialog/FeedbackDialog';\n\n  const FeedbackDialog = ({ props }) => {\n    const onSubmit = data => {\n      console.log({ ...data });\n    };\n\n    return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n  };\n\n  export default FeedbackDialog;\n\n```\n\n\n## Creating a handler\n\nNext, you'll need a place to send the data. For the Carbon website, we use a serverless function that forwards the data to a [SurveyGizmo](https://www.surveygizmo.com/) quiz. \nYou can see that function [here](https://github.com/carbon-design-system/carbon-website/blob/master/functions/survey.js).\n\nThe handler can send a fetch request off to the endpoint you create. Update the `onSubmit` handler to send the data wherever you want. This function receives the following arguments:\n   - `experience`: \"Negative\", \"Positive\" or \"Neutral\"\n   - `comment`: An optional comment\n   - `path`: the window location when the survey was submitted\n\n```jsx\nconst FeedbackDialog = ({ props }) => {\n  const onSubmit = data => {\n    fetch(process.env.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(data),\n  });\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n```\n\n\n\n","type":"Mdx","contentDigest":"1c0246b78a24ec5175ce702ea0a677b9","counter":172,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"FeedbackDialog","description":"Allow visitors to your website to provide feedback through a dialog"},"exports":{},"rawBody":"---\ntitle: FeedbackDialog\ndescription: Allow visitors to your website to provide feedback through a dialog\n---\n\n<PageDescription>\n\nThe `<FeedbackDialog>` component is a modeless dialog that allows your users to provide low-friction, anonymous feedback for a specific page.\n\n</PageDescription>\n\n## Activating the dialog\n\nThe Feedback button only becomes visisble once you've supplied an `onSubmit` handler. To do that, we'll need to shadow the `FeedbackDialog` component.\n\n1. Create a new javascript file under `src/gatsby-theme-carbon/components/FeedbackDialog/FeedbackDialog.js`. Matching the filepath exactly is important here.\n\n2. Copy the following snippet into your new file\n\n```jsx\n  import React from 'react';\n  import ThemeFeedbackDialog from 'gatsby-theme-carbon/src/components/FeedbackDialog/FeedbackDialog';\n\n  const FeedbackDialog = ({ props }) => {\n    const onSubmit = data => {\n      console.log({ ...data });\n    };\n\n    return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n  };\n\n  export default FeedbackDialog;\n\n```\n\n\n## Creating a handler\n\nNext, you'll need a place to send the data. For the Carbon website, we use a serverless function that forwards the data to a [SurveyGizmo](https://www.surveygizmo.com/) quiz. \nYou can see that function [here](https://github.com/carbon-design-system/carbon-website/blob/master/functions/survey.js).\n\nThe handler can send a fetch request off to the endpoint you create. Update the `onSubmit` handler to send the data wherever you want. This function receives the following arguments:\n   - `experience`: \"Negative\", \"Positive\" or \"Neutral\"\n   - `comment`: An optional comment\n   - `path`: the window location when the survey was submitted\n\n```jsx\nconst FeedbackDialog = ({ props }) => {\n  const onSubmit = data => {\n    fetch(process.env.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(data),\n  });\n\n  return <ThemeFeedbackDialog {...props} onSubmit={onSubmit} />;\n};\n```\n\n\n\n","fileAbsolutePath":"/Users/andrew.hock/particarbo/src/pages/components/FeedbackDialog.mdx"}}},"staticQueryHashes":[]}